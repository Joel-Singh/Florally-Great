extends ../form

block title
  title=title || "Add New Flower"

block header
  h1= title || "Add New Flower"

block form elements
  +initializeDefaultLocalValues

  label(for='name') Name:
  input#name(
    type='text'
    placeholder='Enter name here'
    name='name'
    value=prepopulatedValues.name
  )

  label(for='description') Description:
  input#description(
    type='text'
    placeholder='Enter description here'
    name='description'
    value=prepopulatedValues.description
  )

  label(for='numberInStock') Number In Stock:
  input#description(
    type='text'
    placeholder='Enter number in stock'
    name='numberInStock'
    value=prepopulatedValues.numberInStock
  )

  label(for='price') Price:
  input#price(
    type='text'
    placeholder='Enter price here'
    name='price'
    value=prepopulatedValues.price
  )

  +generateRegionSelect(regionList)

  button(type='submit') Submit

mixin generateRegionSelect(regionList)
  -
    regionList.sort(
      function(a, b) {
          let textA = a.name.toUpperCase();
          let textB = b.name.toUpperCase();
          return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;
        }
    );

  label(for='region') Region:
  select#region(placeholder='select region' name='regionID')
    for region in regionList
      option(value=region._id) #{region.name}

mixin initializeDefaultLocalValues()
  -
    if (typeof regionList === 'undefined') {
        regionList = []
    }

    if (typeof prepopulatedValues === 'undefined') {
      prepopulatedValues = setDefaultForUndefined({}, '');
    } else {
      prepopulatedValues = setDefaultForUndefined(prepopulatedValues, '');
    }

    function setDefaultForUndefined(obj, defaultValue) {
      let handler = {
        get: function(target, prop) {
          return prop in target ?
            target[prop] : defaultValue;
        }
      };

      return new Proxy(obj, handler);
    }
